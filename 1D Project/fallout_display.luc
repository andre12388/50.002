module fallout_display (
    input char[2][4],  // take in 2 chars of 4 bits each
    output segs[2][7]  // 7 segments at the display
  ) {
  
  always {
    case (char[0]) {   // decimal to one hot segment
      4h0: segs[0] = 7b0111111;
      4h1: segs[0] = 7b0000110;
      4h2: segs[0] = 7b1011011;
      4h3: segs[0] = 7b1001111;
      4h4: segs[0] = 7b1100110;
      4h5: segs[0] = 7b1101101;   // s
      4h6: segs[0] = 7b1111101;
      4h7: segs[0] = 7b0000111;
      4h8: segs[0] = 7b1111111;
      4h9: segs[0] = 7b1100111;
      4hA: segs[0] = 7b1110100;  // h
      4hB: segs[0] = 7b0000110;  // i
      4hC: segs[0] = 7b0111100;  // l
      4hD: segs[0] = 7b1011100;  // o
      4hE: segs[0] = 7b0110111;  // r
      default: segs[0] = 7b0101010;
    }
    
    case (char[1]) {   // decimal to one hot segment
      h0: segs[0] = 7b0111111;
      4h1: segs[0] = 7b0000110;
      4h2: segs[0] = 7b1011011;
      4h3: segs[0] = 7b1001111;
      4h4: segs[0] = 7b1100110;
      4h5: segs[0] = 7b1101101;   // s
      4h6: segs[0] = 7b1111101;
      4h7: segs[0] = 7b0000111;
      4h8: segs[0] = 7b1111111;
      4h9: segs[0] = 7b1100111;
      4hA: segs[0] = 7b1110100;  // h
      4hB: segs[0] = 7b0000110;  // i
      4hC: segs[0] = 7b0111100;  // l
      4hD: segs[0] = 7b1011100;  // o
      4hE: segs[0] = 7b0110111;  // r
      default: segs[1] = 7b0101010;
    }
    
  }
}